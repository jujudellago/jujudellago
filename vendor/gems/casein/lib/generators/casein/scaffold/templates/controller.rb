# Scaffolding generated by Casein <%= casein_get_full_version_string %>

module Casein
  class <%= class_name.pluralize %>Controller < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::Users access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
    layout 'constellation'    
    respond_to :html,:js,:xml
    helper_method :sort_column, :sort_direction
  
  
  
  
    def index
      per_page=params[:per_page]||=10
  		@<%= plural_name %> = <%= class_name %>.search(params[:search]).order(sort_column + " " + sort_direction).paginate(:per_page =>per_page, :page => params[:page])
  		respond_with(@<%= plural_name %>)
    end


    
    
  
    def show
      
      @<%= singular_name %> = <%= class_name %>.find params[:id]
    end
 
    def new
      
    	@<%= singular_name %> = <%= class_name %>.new
    end

    def create
      @<%= singular_name %> = <%= class_name %>.new params[:<%= singular_name %>]
    
      if @<%= singular_name %>.save
        flash[:notice] = '<%= singular_name.humanize.capitalize %> created'
        redirect_to casein_<%= @plural_route %>_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new <%= singular_name.humanize.downcase %>'
        render :action => :new
      end
    end
  
    def update
      
      
      @<%= singular_name %> = <%= class_name %>.find params[:id]
    
      if @<%= singular_name %>.update_attributes params[:<%= singular_name %>]
        flash[:notice] = '<%= singular_name.humanize.capitalize %> has been updated'
        redirect_to casein_<%= @plural_route %>_path
      else
        flash.now[:warning] = 'There were problems when trying to update this <%= singular_name.humanize.downcase %>'
        render :action => :show
      end
    end
 
    def destroy
      @<%= singular_name %> = <%= class_name %>.find params[:id]

      @<%= singular_name %>.destroy
      flash[:notice] = '<%= singular_name.humanize.capitalize %> has been deleted'
      redirect_to casein_<%= @plural_route %>_path
    end
    
    
      def enabledisable
        @<%= singular_name %> = <%= class_name %>.find params[:id]
        enbl=params[:enabled]

        if @<%= singular_name %>.update_attribute(:enabled,enbl )
          if enbl
            message = "@<%= singular_name %> published, it is visible now"          
          else
            message = "@<%= singular_name %> un-published, it is hidden now"
          end
        else
          message = "There was a problem setting enabled status this @<%= singular_name %>."
        end
        flash[:notice] = message
      	respond_with(@<%= singular_name %>)
      end
  
     private

        def sort_column
          <%= class_name %>.column_names.include?(params[:sort]) ? params[:sort] : "name"
        end

        def sort_direction
          %w[asc desc].include?(params[:direction]) ? params[:direction] : "asc"
        end
  
  
  
  
  end
end