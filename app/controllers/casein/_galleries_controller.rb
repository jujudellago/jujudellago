# Scaffolding generated by Casein v.3.1.7

module Casein
  class GalleriesController < Casein::CaseinController
    layout 'constellation'
    ## optional filters for defining usage according to Casein::Users access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Galleries'
  		@galleries = Gallery.paginate :page => params[:page]
    end
  
    def show
      
      
      @casein_page_title = 'View gallery'
      @gallery = Gallery.find params[:id]
    end
 
    def new
      
      
      @casein_page_title = 'Add a new gallery'
    	@gallery = Gallery.new
    end

    def create
      @gallery = Gallery.new params[:gallery]
    
      if @gallery.save
        flash[:notice] = 'Gallery created'
        redirect_to casein_galleries_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new gallery'
        render :action => :new
      end
    end
    def enabledisable
      @gallery = Gallery.find params[:id]
      flash[:notice] = "Gallery visibility set to #{params[:enabled]}"
      @gallery.update_attribute :enabled,params[:enabled]

      
    end
  
    def sort
      
      @gallery = Gallery.find(params[:id])
      photos = @gallery.photos
      photos.each do |photo|
          photo.position = params['photo'].index(photo.id.to_s) + 1
          photo.save
      end
       flash[:notice] = 'Gallery positions saved'
      
    end
  
  
    def update
      @casein_page_title = 'Update gallery'
      
      
      @gallery = Gallery.find params[:id]
      #RAILS_DEFAULT_LOGGER.error("\nxxxxxxx will update a gallery #{ params[:gallery].inspect}");    
     #  if params[:enabled]
     #    params[:gallery][]
     #  end
       
       
      if @gallery.update_attributes params[:gallery]
        flash[:notice] = 'Gallery has been updated'
        redirect_to casein_galleries_path
      else
        flash.now[:warning] = 'There were problems when trying to update this gallery'
        render :action => :show
      end
    end
 
    def destroy
      @gallery = Gallery.find params[:id]

      @gallery.destroy
      flash[:notice] = 'Gallery has been deleted'
      redirect_to casein_galleries_path
    end
  
  end
end